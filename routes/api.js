var express = require('express');
var router = express.Router({ mergeParams: true, strickt: true });

const db = require('./queries');

router.use(function (req, res, next) {
    console.log("Logging request... (Message does nothing atm)");
    next();
})

/**
 *  @swagger
 * 
 *  /getAll:
 *      get:
 *          description: Get all users in database (Mainly to get firebaseID so we can easily test)
 *          tags:
 *              - Get all
 *          produces: 
 *              - application/json
 *          responses:
 *              200:
 *                  description: Successfully get an employer/jobseeker
 *              400:
 *                  description: User could not be found
 *              500:
 *                  description: Internal server error
 * 
 * 
 */
router.get('/getAll', db.getAllJobSeekers);

router.route('/init')
    /**
     *  @swagger
     * 
     *  /init:
     *      post:
     *          description: Get either the jobseeker or employer's pre-information if exists
     *          tags:
     *              - Initialization
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: firebaseID
     *                description: FirebaseID generated by Firebase
     *                in: formData
     *                requried: true
     *                type: string 
     *          responses:
     *              200:
     *                  description: Successfully get an employer/jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(db.init);

router.route('/employer/:uid?')
    /**
     *  @swagger
     * 
     *  /employer:
     *      post:
     *          description: Create an employer
     *          tags:
     *              - Employer
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: firebaseID
     *                description: FirebaseID generated by Firebase
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: email
     *                description: E-mail of the employer
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: name
     *                description: Name of the employer
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: company
     *                description: Id of the company
     *                in: formData
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully created an employer
     *              400:
     *                  description: User could not be created
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(db.createEmployer)
    /**
     *  @swagger
     * 
     *  /employer/{uid}:
     *      get:
     *          description: Returns information about specified jobseeker
     *          tags:
     *              - Employer
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getEmployer)
    /**
     *  @swagger
     * 
     *  /employer/{uid}:
     *      put:
     *          description: Modify information of specified employer; NOTE! YOU MUST PASS EVERYTHING ELSE AS BODY
     *          tags:
     *              - Employer
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UUID of the corresponding employer
     *                in: path
     *                requried: true
     *                type: string
     *              - name: name
     *                description: The new name for the employer
     *                in: formData
     *                requried: false
     *                type: string
     *              - name: email_address
     *                description: The new e-mail of the employer
     *                in: formData
     *                requried: false
     *                type: string
     *              - name: phone_number
     *                description: The new phone number the employer
     *                in: formData
     *                requried: false
     *                type: string
     *              - name: location
     *                description: The new location of the employer
     *                in: formData
     *                requried: false
     *                type: string
     *          responses:
     *              200:
     *                  description: Successfully modified the employer
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .put(db.updateEmployer)


router.route('/jobseeker/?:uid?/')
    /**
     *  @swagger
     * 
     *  /jobseeker:
     *      post:
     *          description: Create a jobseeker
     *          tags:
     *              - Jobseeker
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: firebaseID
     *                description: FirebaseID generated by Firebase
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: email
     *                description: E-mail of the jobseeker
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: name
     *                description: Name of the jobseeker
     *                in: formData
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully created a jobseeker
     *              400:
     *                  description: User could not be created
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(db.createJobseeker)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}:
     *      get:
     *          description: Returns information about specified jobseeker
     *          tags:
     *              - Jobseeker
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getJobseeker)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}:
     *      put:
     *          description: Modify information of specified jobseeker; NOTE! YOU MUST PASS EVERYTHING ELSE AS BODY
     *          tags:
     *              - Jobseeker
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UUID of the corresponding jobseeker
     *                in: path
     *                requried: true
     *                type: string
     *              - name: name
     *                description: The new name of the Jobseeker
     *                in: formData
     *                requried: false
     *                type: string
     *              - name: email_address
     *                description: The new e-mail of the jobseeker
     *                in: formData
     *                requried: false
     *                type: string
     *              - name: phone_number
     *                description: The new phone number of the jobseeker
     *                in: formData
     *                requried: false
     *                type: string
     *              - name: location
     *                description: The new location of the jobseeker
     *                in: formData
     *                requried: false
     *                type: string
     *          responses:
     *              200:
     *                  description: Successfully modified the jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .put(db.updateJobseeker);

router.route('/jobseeker/:uid/profile/')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/profile:
     *      get:
     *          description: Return the default profile for a jobseeker
     *          tags:
     *              - Jobseeker, profile
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker profile
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getProfile);

router.route('/jobseeker/:uid/skills')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/skills:
     *      get:
     *          description: Returns the skills of specified jobseeker
     *          tags:
     *              - Jobseeker, skills
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getSkills)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/skills:
     *      post:
     *          description: Add a new skill to a jobseeker table
     *          tags:
     *              - Jobseeker, skills
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: skill
     *                description: Skill to add for a user
     *                in: formData
     *                required: true
     *                type: string
     *              - name: ranking
     *                description: Ranking of the skill
     *                in: formData
     *                required: false
     *                type: integer
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(db.addSkill)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/skills:
     *      delete:
     *          description: Delete a skill added to the database for a jobseeker
     *          tags:
     *              - Jobseeker, skills
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: skill
     *                description: Skill to add for a user
     *                in: formData
     *                required: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .delete(db.deleteSkill)

router.route('/jobseeker/:uid/dream_careers')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_careers:
     *      get:
     *          description: Returns the dream careers of specified jobseeker
     *          tags:
     *              - Jobseeker, Dream Careers
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getDreamCareers)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_careers:
     *      post:
     *          description: Add a new dream career to a jobseeker table
     *          tags:
     *              - Jobseeker, Dream Careers
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: dream_career
     *                description: Skill to add for a user
     *                in: formData
     *                required: true
     *                type: string
     *              - name: ranking
     *                description: Ranking of the skill
     *                in: formData
     *                required: false
     *                type: integer
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(db.addDreamCareers)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_careers:
     *      delete:
     *          description: Delete a drema career added to the database for a jobseeker
     *          tags:
     *              - Jobseeker, Dream Careers
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: dream_career
     *                description: Dream career to add for a user
     *                in: formData
     *                required: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .delete(db.deleteDreamCareers)

router.route('/jobseeker/:uid/dream_companies')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_companies:
     *      get:
     *          description: Returns the dream careers of specified jobseeker
     *          tags:
     *              - Jobseeker, Dream Companies
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getDreamCompanies)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_companies:
     *      post:
     *          description: Add a new dream company to a jobseeker table
     *          tags:
     *              - Jobseeker, Dream Companies
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: dream_company
     *                description: Dream company to add to the user
     *                in: formData
     *                required: true
     *                type: string
     *              - name: preference
     *                description: Preference of the company
     *                in: formData
     *                required: false
     *                type: integer
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(db.addDreamCompanies)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_companies:
     *      delete:
     *          description: Delete a dream company added to the database for a jobseeker
     *          tags:
     *              - Jobseeker, Dream Companies
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: dream_company
     *                description: Dream company to delete from the user
     *                in: formData
     *                required: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .delete(db.deleteDreamCompanies)

router.route('/jobseeker/:uid/exp')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/exp:
     *      get:
     *          description: Returns the experiences of specified jobseeker
     *          tags:
     *              - Jobseeker, Experiences
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getExp)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/exp:
     *      post:
     *          description: Add a new experience to jobseeker (ONLY SUPPORST 1 RIGHT NOW)
     *          tags:
     *              - Jobseeker, Experiences
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: title
     *                description: Title of the past job experience
     *                in: formData
     *                required: true
     *                type: string
     *              - name: start_date
     *                description: Starting date of job
     *                in: formData
     *                required: true
     *                type: string
     *              - name: end_date
     *                description: Ending date of job
     *                in: formData
     *                required: true
     *                type: string
     *              - name: description
     *                description: The description of the job
     *                in: formData
     *                required: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(db.addExp)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/exp:
     *      delete:
     *          description: Delete an experience from jobseeker (ONLY SUPPORST 1 RIGHT NOW)
     *          tags:
     *              - Jobseeker, Experiences
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .delete(db.deleteExp)

router.route('/company/:company_name?')
    /**
     *  @swagger
     * 
     *  /company/{company_name}:
     *      get:
     *          description: Returns the company information
     *          tags:
     *              - Company
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: company_name
     *                description: id of the company
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Company
     *              400:
     *                  description: Company could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getCompany)

    /**
     *  @swagger
     * 
     *  /company:
     *      post:
     *          description: Add a Company
     *          tags:
     *              - Company
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: name
     *                description: Name of the company
     *                in: formData
     *                requried: true
     *                type: string
  
     *          responses:
     *              200:
     *                  description: Successfully add the company
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     */
    .post(db.addCompany)

    /**
     *  @swagger
     * 
     *  /company/{company_id}:
     *      put:
     *          description: Update a company
     *          tags:
     *              - Company
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: company_id
     *                description: id of the company
     *                in: path
     *                requried: true
     *                type: string
     *              - name: company_name
     *                description: Name of the company
     *                in: formData
     *                requried: False
     *                type: string
     *              - name: successful_hires
     *                description: Number of successful hires
     *                in: formData
     *                requried: False
     *                type: integer
     *              - name: num_jobs
     *                description: Number of jobs available
     *                in: formData
     *                requried: False
     *                type: integer
     *              - name: num_employers
     *                description: Number of employers
     *                in: formData
     *                requried: False
     *                type: integer
     * 
     *          responses:
     *              200:
     *                  description: Successfully delete the company
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     */
    .delete(db.updateCompany)

    /**
     *  @swagger
     * 
     *  /company/{company_id}:
     *      delete:
     *          description: Delete a company
     *          tags:
     *              - Company
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: company_id
     *                description: id of the company
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully delete the company
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .delete(db.deleteCompany)


module.exports = router;