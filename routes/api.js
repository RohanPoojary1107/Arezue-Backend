var express = require('express');
var router = express.Router({ mergeParams: true, strickt: true});

const db = require('./queries');

router.use(function(req, res, next) {
    console.log("Logging request... (Message does nothing atm)");
    next();
})


router.get('/getAll', db.getAllJobSeekers);

router.route('/init')
    /**
     *  @swagger
     * 
     *  /init:
     *      post:
     *          description: Get either the jobseeker or employer's pre-information if exists
     *          tags:
     *              - Initialization
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: firebaseID
     *                description: FirebaseID generated by Firebase
     *                in: formData
     *                requried: true
     *                type: string 
     *          responses:
     *              200:
     *                  description: Successfully get an employer/jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(db.init);

// router.route('/employer/:uid')
//     .get(db.getEmployer);
// router.get('/employer/:uid/test', db.getEmployer);

router.route('/employer/:uid?')
    /**
     *  @swagger
     * 
     *  /employer:
     *      post:
     *          description: Create an employer
     *          tags:
     *              - Employer
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: firebaseID
     *                description: FirebaseID generated by Firebase
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: email
     *                description: E-mail of the employer
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: name
     *                description: Name of the employer
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: company
     *                description: Id of the company
     *                in: formData
     *                requried: true
     *                type: integer
     * 
     *          responses:
     *              200:
     *                  description: Successfully created an employer
     *              400:
     *                  description: User could not be created
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(db.createEmployer)
    /**
     *  @swagger
     * 
     *  /employer/{uid}:
     *      get:
     *          description: Returns information about specified jobseeker
     *          tags:
     *              - Employer
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getEmployer)
    /**
     *  @swagger
     * 
     *  /employer/{uid}:
     *      put:
     *          description: Modify information of specified employer; NOTE! YOU MUST PASS EVERYTHING ELSE AS BODY
     *          tags:
     *              - Employer
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UUID of the corresponding employer
     *                in: formData
     *                requried: true
     *                type: string
     *          responses:
     *              200:
     *                  description: Successfully modified the employer
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .put(db.updateEmployer)


router.route('/jobseeker/?:uid?/')
    /**
     *  @swagger
     * 
     *  /jobseeker:
     *      post:
     *          description: Create a jobseeker
     *          tags:
     *              - Jobseeker
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: firebaseID
     *                description: FirebaseID generated by Firebase
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: email
     *                description: E-mail of the jobseeker
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: name
     *                description: Name of the jobseeker
     *                in: formData
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully created a jobseeker
     *              400:
     *                  description: User could not be created
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(db.createJobseeker)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}:
     *      get:
     *          description: Returns information about specified jobseeker
     *          tags:
     *              - Jobseeker
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getJobseeker)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}:
     *      put:
     *          description: Modify information of specified jobseeker; NOTE! YOU MUST PASS EVERYTHING ELSE AS BODY
     *          tags:
     *              - Jobseeker
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UUID of the corresponding jobseeker
     *                in: formData
     *                requried: true
     *                type: string
     *          responses:
     *              200:
     *                  description: Successfully modified the jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .put(db.updateJobseeker);

    router.route('/jobseeker/:uid/skills')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/skills:
     *      get:
     *          description: Returns the skills of specified jobseeker
     *          tags:
     *              - Jobseeker, skills
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getSkills)

    router.route('/jobseeker/:uid/dream_careers')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_careers:
     *      get:
     *          description: Returns the dream careers of specified jobseeker
     *          tags:
     *              - Jobseeker, Drean Careers
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getDreamCareers)

    router.route('/jobseeker/:uid/dream_companies')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_companies:
     *      get:
     *          description: Returns the dream careers of specified jobseeker
     *          tags:
     *              - Jobseeker, Drean Companies
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getDreamCompanies)

    router.route('/jobseeker/:uid/exp')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/exp:
     *      get:
     *          description: Returns the experiences of specified jobseeker
     *          tags:
     *              - Jobseeker, Experiences
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(db.getExp)

module.exports = router;