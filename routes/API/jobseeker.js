// Global var and functions
const express = require('express');
const router = express.Router({
    mergeParams: true,
    strict: true
});
const bodyParser = require('body-parser');

const basic = require('./jobseeker/basic');
const profile = require('./jobseeker/profile');
const skill = require('./jobseeker/skill');
const dream_career = require('./jobseeker/dream_career');
const dream_company = require('./jobseeker/dream_company');
const experience = require('./jobseeker/experience'); 

router.route('/:uid?')
    /**
     *  @swagger
     * 
     *  /jobseeker:
     *      post:
     *          description: Create a jobseeker
     *          tags:
     *              - Jobseeker
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: firebaseID
     *                description: FirebaseID generated by Firebase
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: email
     *                description: E-mail of the jobseeker
     *                in: formData
     *                requried: true
     *                type: string
     *              - name: name
     *                description: Name of the jobseeker
     *                in: formData
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully created a jobseeker
     *              400:
     *                  description: User could not be created
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(basic.createJobseeker)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}:
     *      get:
     *          description: Returns information about specified jobseeker
     *          tags:
     *              - Jobseeker
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(basic.getJobseeker)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}:
     *      put:
     *          description: Modify information of specified jobseeker; NOTE! YOU MUST PASS EVERYTHING ELSE AS BODY
     *          tags:
     *              - Jobseeker
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UUID of the corresponding jobseeker
     *                in: path
     *                requried: true
     *                type: string
     *              - name: name
     *                description: The new name of the Jobseeker
     *                in: formData
     *                requried: false
     *                type: string
     *              - name: email_address
     *                description: The new e-mail of the jobseeker
     *                in: formData
     *                requried: false
     *                type: string
     *              - name: phone_number
     *                description: The new phone number of the jobseeker
     *                in: formData
     *                requried: false
     *                type: string
     *              - name: location
     *                description: The new location of the jobseeker
     *                in: formData
     *                requried: false
     *                type: string
     *          responses:
     *              200:
     *                  description: Successfully modified the jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .put(basic.updateJobseeker);


router.route('/:uid/profile/?')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/profile:
     *      get:
     *          description: Return the default profile for a jobseeker
     *          tags:
     *              - Jobseeker, profile
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker profile
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(profile.getProfile);

router.route('/:uid/skills')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/skills:
     *      get:
     *          description: Returns the skills of specified jobseeker
     *          tags:
     *              - Jobseeker, skills
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(skill.getSkills)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/skills:
     *      post:
     *          description: Add a new skill to a jobseeker table
     *          tags:
     *              - Jobseeker, skills
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: skill
     *                description: Skill to add for a user
     *                in: formData
     *                required: true
     *                type: string
     *              - name: ranking
     *                description: Ranking of the skill
     *                in: formData
     *                required: false
     *                type: integer
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(skill.addSkill)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/skills:
     *      delete:
     *          description: Delete a skill added to the database for a jobseeker
     *          tags:
     *              - Jobseeker, skills
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: skill
     *                description: Skill to delete
     *                in: header
     *                required: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .delete(skill.deleteSkill)

router.route('/:uid/dream_careers')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_careers:
     *      get:
     *          description: Returns the dream careers of specified jobseeker
     *          tags:
     *              - Jobseeker, Dream Careers
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(dream_career.getDreamCareers)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_careers:
     *      post:
     *          description: Add a new dream career to a jobseeker table
     *          tags:
     *              - Jobseeker, Dream Careers
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: dream_career
     *                description: Skill to add for a user
     *                in: formData
     *                required: true
     *                type: string
     *              - name: ranking
     *                description: Ranking of the skill
     *                in: formData
     *                required: false
     *                type: integer
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(dream_career.addDreamCareers)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_careers:
     *      delete:
     *          description: Delete a drema career added to the database for a jobseeker
     *          tags:
     *              - Jobseeker, Dream Careers
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: dream_career
     *                description: Dream career to add for a user
     *                in: header
     *                required: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .delete(dream_career.deleteDreamCareers)

router.route('/:uid/dream_companies')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_companies:
     *      get:
     *          description: Returns the dream careers of specified jobseeker
     *          tags:
     *              - Jobseeker, Dream Companies
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(dream_company.getDreamCompanies)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_companies:
     *      post:
     *          description: Add a new dream company to a jobseeker table
     *          tags:
     *              - Jobseeker, Dream Companies
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: dream_company
     *                description: Dream company to add to the user
     *                in: formData
     *                required: true
     *                type: string
     *              - name: preference
     *                description: Preference of the company
     *                in: formData
     *                required: false
     *                type: integer
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(dream_company.addDreamCompanies)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/dream_companies:
     *      delete:
     *          description: Delete a dream company added to the database for a jobseeker
     *          tags:
     *              - Jobseeker, Dream Companies
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: dream_company
     *                description: Dream company to delete from the user
     *                in: header
     *                required: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .delete(dream_company.deleteDreamCompanies)

    router.route('/:uid/exp')
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/exp:
     *      get:
     *          description: Returns the experiences of specified jobseeker
     *          tags:
     *              - Jobseeker, Experiences
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .get(experience.getExp)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/exp:
     *      post:
     *          description: Add a new experience to jobseeker (ONLY SUPPORST 1 RIGHT NOW)
     *          tags:
     *              - Jobseeker, Experiences
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: title
     *                description: Title of the past job experience
     *                in: formData
     *                required: true
     *                type: string
     *              - name: start_date
     *                description: Starting date of job
     *                in: formData
     *                required: true
     *                type: string
     *              - name: end_date
     *                description: Ending date of job
     *                in: formData
     *                required: true
     *                type: string
     *              - name: description
     *                description: The description of the job
     *                in: formData
     *                required: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .post(experience.addExp)
    /**
     *  @swagger
     * 
     *  /jobseeker/{uid}/exp:
     *      delete:
     *          description: Delete an experience from jobseeker (ONLY SUPPORST 1 RIGHT NOW)
     *          tags:
     *              - Jobseeker, Experiences
     *          produces: 
     *              - application/json
     *          parameters:
     *              - name: uid
     *                description: UID for the specific user
     *                in: path
     *                requried: true
     *                type: string
     *              - name: exp_id
     *                description: Experience ID of the specific experience
     *                in: header
     *                required: true
     *                type: string
     * 
     *          responses:
     *              200:
     *                  description: Successfully get the Jobseeker
     *              400:
     *                  description: User could not be found
     *              500:
     *                  description: Internal server error
     * 
     * 
     */
    .delete(experience.deleteExp)

module.exports = router;